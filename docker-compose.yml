version: "3"

services:
  backend:
    container_name: "backend"
    build:
      context: backend
      dockerfile: Dockerfile
    env_file: .env
    restart: always
    ports:
      - "3000:3000"
    networks:
      - net
    depends_on:
      - postgres
    volumes:
      - ./backend/public/uploads:/app/public/uploads

  postgres:
    container_name: "database"
    image: postgres:16
    restart: always
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - net

  frontend:
    container_name: "frontend"
    build:
      context: frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5173:3000
    networks:
      - net
    depends_on:
      - backend
  systeminfoservice:
    container_name: "systeminfoservice"
    restart: always
    build:
      context: systemInfoService
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    networks:
      - net
    depends_on:
      - frontend
  emailservice:
    container_name: "emailservice"
    restart: always
    build:
      context: emailService
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "3001:3000"
    networks:
      - net
    depends_on:
      - backend
    volumes:
      - ./logs/mail_service:/app/logs

  tgbotservice:
    container_name: "tgbotservice"
    restart: always
    build:
      context: tgBot
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "3002:3000"
    networks:
      - net
    volumes:
      - ./logs/tgBot_service:/app/logs

  nginx:
    restart: always
    build:
      context: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/ssl
    environment:
   
      - DOMAIN=${DOMAIN}
    depends_on:
      - frontend
      - backend
      - letsencrypt
    networks:
      - net

  # certbot:
  #   ports:
  #     - "6000:80"
  #   build:
  #     context: certbot
  #     dockerfile: Dockerfile              
  #   restart: always
  #   environment:
  #     - EMAIL=${EMAIL_LOGIN}      
  #     - DOMAIN=${DOMAIN}
  #   volumes:
  #     - ./ssl:/app/ssl                  
  #     - ./certbot:/etc/cron.d
  #   networks:
  #     - net
  letsencrypt:
    ports:
      - "6000:80"
    image: certbot/certbot:latest
    command: sh -c "certbot certonly --standalone -d ${DOMAIN} --text --agree-tos --email ${EMAIL_LOGIN} --server https://acme-v02.api.letsencrypt.org/directory --rsa-key-size 4096 --verbose --keep-until-expiring --preferred-challenges=http"
    entrypoint: ""
    volumes:
      - "./ssl:/etc/letsencrypt"
    environment:
      - TERM=xterm


networks:
  net:
    driver: bridge

volumes:
  postgres_data:
